//PROTECT $1f90000

ORG CurrentOffset+8 
ALIGN 0x10000 
ORG CurrentOffset-8 
HijackPos:
#define HijackAddress CurrentOffset+8 
POIN HijackAddress 
ReturnAddress:
POIN 0x80000c0 // most roms  
//   0x8000204 // PkmnFR
VideoLabel: 
#incbin "video.dmp" 
#include "NewOpening.lyn.event" 
MESSAGE CurrentOffset 
BYTE ((VideoLabel+0x25C-8)-EndOfOpeningCode)>>2
BYTE ((VideoLabel+0x25C-8)-EndOfOpeningCode)>>10
BYTE ((VideoLabel+0x25C-8)-EndOfOpeningCode)>>18
// BYTE (EndOfOpeningCode-(VideoLabel+0x25C+8))>>2
// BYTE (EndOfOpeningCode-(VideoLabel+0x25C+8))>>10
// BYTE (EndOfOpeningCode-(VideoLabel+0x25C+8))>>18
BYTE $EA // b 



PUSH 
ORG 0 

BYTE (VideoLabel-8)>>2 // no +8 as that's default 
BYTE (VideoLabel-8)>>10
BYTE (VideoLabel-8)>>18
BYTE $EA // b HijackPos 
// b 0x9B45B48 
// 6d 16 d3 
// d0 16 6d ea // what we want 
// BYTE $6F $FF $FE 
// FF FF FC // -9 
// FF FF FD // -4 
// FF FF FE // itself 
// FF FF FF // +4 
// 00 00 00 // +8 
// 00 00 01 // +0xC 
// 00 01 00 // +0x408 


//ORG OpeningReturn 
//#define ReturnDistance (HijackAddress-CurrentOffset)>>2

ORG VideoLabel + 0x258
//b Back // 设置返回程序
BYTE (OpeningReturn-(VideoLabel+0x258+8))>>2
BYTE (OpeningReturn-(VideoLabel+0x258+8))>>10
BYTE (OpeningReturn-(VideoLabel+0x258+8))>>18
BYTE $EA // b 
// 9b45b54
// have  
// want: 77 3F 0E EA 

POP 


PUSH 


ORG VideoLabel + 0xAE30 
BYTE $7D $07 $00 $EA // 即b 3003000h
ORG VideoLabel + 0xADC4
BYTE $9C $07 $00 $EA  // 即b 3001310h
 // 以下为指针校正 ; 8ff0300
ORG VideoLabel + 0x306
SHORT VideoLabel >> 16  //  pointer byte relative distance I guess 
ORG VideoLabel + 0x146
SHORT VideoLabel >> 16
ORG VideoLabel + 0x222
SHORT VideoLabel >> 16
ORG VideoLabel + 0x166
SHORT VideoLabel >> 16
ORG VideoLabel + 0x9CF6
SHORT VideoLabel >> 16

POP 







