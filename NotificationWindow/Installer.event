
// Replaces: TerrainDisplay_Init
// Hooks: SetChapterFlag, SetPermanentFlag

// gProcScr_TitleScreen 

#include "EAstdlib.event"
#include "Definitions.enu.event" 

// for testing 
PUSH 
ORG $1DED56C
POIN MapMenu_IsAchievementsCommandAvailable

ORG $1DED574
POIN MapMenu_AchievementsCommand
POP 



ALIGN 4 
NotificationWindow_DisplayFrames: 
WORD 120 // Disappear 2 seconds after it finishes printing 
DisableBGMNotificationsFlag:
WORD 0x12A // Choose a flag if you want to disable new BGM notifications ingame 
MAX_LINE_WIDTH:
WORD 144 // 152 will cause a little text to be outside the right side of the box 




#ifndef txt
#inctbl "fe8TR" "fe8_tr.tbl"
    #define txt(string2) STRING string2 "fe8TR"; BYTE 0 0; 
#endif 

// #define NotificationEntry(stringLabel, textID, flagID) "POIN stringLabel; SHORT textID flagID" 
#define NotificationEntry(stringLabel, flagID, colour) "POIN stringLabel; SHORT 0 flagID; BYTE colour colour colour colour" 
#define NotificationEntry(stringLabel, flagID, colour1, colour2) "POIN stringLabel; SHORT 0 flagID; BYTE colour1 colour2 colour2 colour2" 
#define NotificationEntry(stringLabel, flagID) "POIN stringLabel; SHORT 0 flagID; BYTE 0 0 0 0" 
#define NotificationEntryTextID(textID, flagID, colour) "POIN 0; SHORT textID flagID; BYTE colour colour colour colour" 
#define NotificationEntryTextID(textID, flagID, colour1, colour2) "POIN 0; SHORT textID flagID; BYTE colour1 colour2 colour2 colour2" 
#define NotificationEntryTextID(textID, flagID) "POIN 0; SHORT textID flagID; BYTE 0 0 0 0" 


#define TEXT_COLOR_SYSTEM_WHITE 0
#define TEXT_COLOR_SYSTEM_GRAY  1
#define TEXT_COLOR_SYSTEM_BLUE  2
#define TEXT_COLOR_SYSTEM_GOLD  3
#define TEXT_COLOR_SYSTEM_GREEN 4
#define TEXT_COLOR_SYSTEM_BLACK 5



ALIGN 4 
bonusData:
FILL (32 * 0x14) // BONUS_CLAIM_NUM_ENTRIES * size 

#define bonusEnt(id, itemID, str) "PUSH; ORG bonusData + (id * 0x14); BYTE 0 0 itemID; txt(str); BYTE 0; POP" 

bonusEnt(0, SteelSword, "Enjoy"); 
bonusEnt(1, Speedwings, "gotta go fast"); 
bonusEnt(2, EnergyRing, "so strong"); 
bonusEnt(3, SecretBook, "skillful"); 
bonusEnt(6, AngelicRobe, "can't die lol"); 
bonusEnt(8, Dracoshield, "tank"); 
bonusEnt(10, Dracoshield, "tank"); 
bonusEnt(13, Dracoshield, "tank"); 
bonusEnt(19, IronSword, "pointy"); 

#define achievementEnt(id, str) "{ header: ; txt(str); BYTE 0 0; PUSH; ORG achievementData + ((id) * 4); POIN header; POP }" 
// flag / func here don't make sense 
// just call UnlockAchievement from func / SetFlag 







ALIGN 4 
achievementData: // these show up once ever 
FILL (1000 * 4)
// achievementEnt(RossRecruitID, "The Wounded Trainee") // done via recruitmentEnt
achievementEnt(EndID, "Tanked")
achievementEnt(EndID+1, "Lost")




ALIGN 4 
flagAchievements:
FILL (512)


// clear valni / lagdou 
// recruit CC characters 
// promotions into specific classes 

// achieve A rank support 
// reach level 20 
// reach promoted level 20 

// equip legendaries 

ALIGN 4 
equipAchievements:
FILL (512)
#define equipEnt(itemID, id, str) "PUSH; ORG equipAchievements + (itemID * 2); SHORT id ; POP; achievementEnt(id, str)" 
equipEnt(Vidofnir, VidofnirID, "The Rooster of Yggdrasil")
equipEnt(Audhulma, AudhulmaID, "The Primordial Norse Cow")
equipEnt(Siegmund, SiegmundID, "The Germanic Hero")
equipEnt(Garm, GarmID, "The Guardian of Hel's Gate")
equipEnt(Nidhogg, NidhoggID, "The Root-Gnawing Dragon")
equipEnt(Sieglinde, SieglindeID, "The Germanic Heroine")
equipEnt(Gleipnir, GleipnirID, "The Binding Chain of Fenrir")
equipEnt(Excalibur, ExcaliburID, "The Sword of King Arthur")
equipEnt(Ivaldi, IvaldiID, "The Norse Dwarf Blacksmith")
equipEnt(Naglfar, NaglfarID, "The Ship of the Dead")
// These all use the same text / same achievement ID 
equipEnt(WretchedAir, UnobtainableItemID, "How'd you get this?") 
equipEnt(Forblaze, UnobtainableItemID, "How'd you get this?") 
equipEnt(Luce, UnobtainableItemID, "How'd you get this?") 
equipEnt(Aircalibur, UnobtainableItemID, "How'd you get this?") 
equipEnt(Stone, UnobtainableItemID, "How'd you get this?") 
equipEnt(CrimsonEye, UnobtainableItemID, "How'd you get this?") 
equipEnt(EvilEye, UnobtainableItemID, "How'd you get this?") 
equipEnt(DemonSurge, UnobtainableItemID, "How'd you get this?") 
equipEnt(Shadowshot, UnobtainableItemID, "How'd you get this?") 



ALIGN 4 
recruitmentAchievements: 
FILL (512) 
#define recruitmentEnt(charID, id, str) "PUSH; ORG recruitmentAchievements + (charID * 2); SHORT id ; POP; achievementEnt(id, str)" 
recruitmentEnt(Ross,    RossRecruitID, "The Wounded Trainee") 
recruitmentEnt(Garcia,  GarciaRecruitID, "The Great Garcia") 
recruitmentEnt(Colm,    ColmRecruitID, "The Thief from Renais") 
recruitmentEnt(Lute,    LuteRecruitID, "The Prodigy") // "The Monk Watcher" 
recruitmentEnt(Joshua,  JoshuaRecruitID, "The Wandering Swordsman") 
recruitmentEnt(Amelia,  AmeliaRecruitID, "The Orphan of Grado") 
recruitmentEnt(Innes,   InnesRecruitID, "The Strategician") 
recruitmentEnt(Gerik,   GerikRecruitID, "The Desert Tiger") 
recruitmentEnt(Tethys,  TethysRecruitID, "The Beloved Dancer") 
recruitmentEnt(LArachel, LArachelRecruitID, "The Princess of Light") 
recruitmentEnt(Dozla,   DozlaRecruitID, "The Steady Axe") 
recruitmentEnt(Marisa,  MarisaRecruitID, "The Crimson Flash") 
recruitmentEnt(Ewan,    EwanRecruitID, "The Pupil") // some of these don't use CUSA 
recruitmentEnt(Cormag,  CormagRecruitID, "The Aloof Lanceman") 
recruitmentEnt(Rennac,  RennacRecruitID, "The 'Merchant'") 
recruitmentEnt(Duessel, DuesselRecruitID, "The Obsidian") 
recruitmentEnt(Syrene,  SyreneRecruitID, "The Graceful Rider") 
// recruit all characters? 


ALIGN 4 
gNotificationsData: // these show up when a flag is turned on 
// NotificationEntryTextID(0x505, 1) // textID "Sword", flagID 
// NotificationEntryTextID(0x3D, 1) // textID, flagID 
NotificationEntry(text0, 1) // text label, flagID 
NotificationEntry(text1, 0xA, TEXT_COLOR_SYSTEM_WHITE, TEXT_COLOR_SYSTEM_GREEN) 
// NotificationEntry(text2, 0x65) 

// NotificationEntry(text3, 0) 
// NotificationEntry(text4, 0) 
WORD 0 0 // Terminator 

// don't exceed 6 lines 
text0: 
txt("Achievement Completed:\\
Scuffed."); BYTE 0 

text1: 
txt("New Game+ Unlock:\\
Silver Sword."); BYTE 0 



/*
// text0: 
txt("Because I could not stop for Death- \He kindly stopped for me- \The Carriage held but just Ourselves- \And Immortality."); BYTE 0 

text3: 
txt("We slowly drove - He knew no haste\\
And I had put away\\
My labor and my leisure too,\\
For His Civility -")

text1: 
txt("Critical security updates are required."); BYTE 0 
text2: 
txt("Achievement unlocked: Pacifist."); BYTE 0 
text0: 
txt("A new update for CandyCrushSaga is available."); BYTE 0 
text4: 
txt("NG+ feature unlocked: Silver Sword."); BYTE 0 
text5: 
txt("Critical security updates are required."); BYTE 0 

*/



#ifndef callHackNew
	#define callHackNew(offset) "BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
    #define jumpToHack(offset) "BYTE 0x00 0x4B 0x18 0x47; POIN (offset|0x1); PROTECT CURRENTOFFSET-8 CURRENTOFFSET-1"
#endif 

PUSH 


#ifdef _FE6_ 
// ORG $ 
#endif 
#ifdef _FE7_ 
// ORG $ 
#endif 
#ifdef _FE8_ 
ORG 0x83be0 
#endif 
callHackNew(HookSetLocalFlag_NotificationWindow) 


#ifdef _FE6_ 
// ORG $ 
#endif 
#ifdef _FE7_ 
// ORG $ 
#endif 
#ifdef _FE8_ 
ORG $226F4 
// POIN ProcScr_E_Achievements_Map // take over guide menu for now 

ORG $81B 
BYTE $2a // ? 
// copied into 3003D70 / 300487c

ORG 0x83CAC
#endif 
callHackNew(HookSetGlobalFlag_NotificationWindow) 
POP 

#ifdef _FE8_ 
#include "Data/FE8.lyn.event" 
#include "Data/FE8_AsmHooks.lyn.event" 
#endif 
#ifdef _FE7_ 
#include "Data/FE7.lyn.event" 
#endif 
#ifdef _FE6_ 
#include "Data/FE6.lyn.event" 
#endif 


