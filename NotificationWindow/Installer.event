
// Replaces: TerrainDisplay_Init
// Hooks: SetChapterFlag, SetPermanentFlag

// gProcScr_TitleScreen 

#include "EAstdlib.event"
#include "Definitions.enu.event" 

ALIGN 4 
DebugFlag_Link: 
WORD 0xEC 

// for testing 
PUSH 
ORG $1DF2F30
POIN MapMenu_IsAchievementsCommandAvailable

ORG $1DF2F38
POIN MapMenu_AchievementsCommand
POP 



ALIGN 4 
NotificationWindow_DisplayFrames: 
WORD 60 // Disappear 1 seconds after it finishes printing 
DisableBGMNotificationsFlag:
WORD 0x12A // Choose a flag if you want to disable new BGM notifications ingame 
MAX_LINE_WIDTH:
// WORD 144 // 152 will cause a little text to be outside the right side of the box 
WORD 184 // longer for sprite text 



#ifndef txt
#inctbl "fe8TR" "fe8_tr.tbl"
    #define txt(string2) STRING string2 "fe8TR"; BYTE 0 0; 
#endif 

// #define NotificationEntry(stringLabel, textID, flagID) "POIN stringLabel; SHORT textID flagID" 
#define NotificationEntry(stringLabel, flagID, colour) "POIN stringLabel; SHORT 0 flagID; BYTE colour colour colour colour" 
#define NotificationEntry(stringLabel, flagID, colour1, colour2) "POIN stringLabel; SHORT 0 flagID; BYTE colour1 colour2 colour2 colour2" 
#define NotificationEntry(stringLabel, flagID) "POIN stringLabel; SHORT 0 flagID; BYTE 0 0 0 0" 
#define NotificationEntryTextID(textID, flagID, colour) "POIN 0; SHORT textID flagID; BYTE colour colour colour colour" 
#define NotificationEntryTextID(textID, flagID, colour1, colour2) "POIN 0; SHORT textID flagID; BYTE colour1 colour2 colour2 colour2" 
#define NotificationEntryTextID(textID, flagID) "POIN 0; SHORT textID flagID; BYTE 0 0 0 0" 


#define TEXT_COLOR_SYSTEM_WHITE 0
#define TEXT_COLOR_SYSTEM_GRAY  1
#define TEXT_COLOR_SYSTEM_BLUE  2
#define TEXT_COLOR_SYSTEM_GOLD  3
#define TEXT_COLOR_SYSTEM_GREEN 4
#define TEXT_COLOR_SYSTEM_BLACK 5



ALIGN 4 
bonusData:
FILL (32 * 0x14) // BONUS_CLAIM_NUM_ENTRIES * size 

#define bonusEnt(id, itemID, str) "PUSH; ORG bonusData + (id * 0x14); BYTE 0 0 itemID; txt(str); BYTE 0; POP" 

bonusEnt(0, SteelSword, "Enjoy"); 
bonusEnt(1, Speedwings, "gotta go fast"); 
bonusEnt(2, EnergyRing, "so strong"); 
bonusEnt(3, SecretBook, "skillful"); 
bonusEnt(6, AngelicRobe, "can't die lol"); 
bonusEnt(8, Dracoshield, "tank"); 
bonusEnt(10, Dracoshield, "tank"); 
bonusEnt(13, Dracoshield, "tank"); 
bonusEnt(19, IronSword, "pointy"); 

#define achievementEntSize 12 
#define achievementEnt(id, str, str2, category) "{ header: ; txt(str); BYTE 0 0; header2: ; txt(str2); BYTE 0 0; PUSH; ORG achievementData + ((id) * achievementEntSize); POIN header header2; SHORT category id; POP }" 
// flag / func here don't make sense 
// just call UnlockAchievement from func / SetFlag 



#define Category_Rewards 1 
#define Category_Recruitables 2 
#define Category_LegendaryWeapons 3
#define Category_Promotions 4
#define Category_ChapterTime 5 
#define Category_TurnCount 6
#define Category_Miscellaneous 7
#define Category_Terminator 12 

ALIGN 4 
Category_Terminator_Link: 
WORD Category_Terminator 
Category_Rewards_Link:
WORD Category_Rewards

ALIGN 4 
gTextIds_AchievementsCategoriesTopic: 
POIN blankStr 
POIN RewardsHeader
POIN RecruitablesHeader
POIN EquipmentHeader 
POIN PromotionsHeader 
POIN ChapterTimeHeader
POIN LowTurnCountHeader
POIN MiscHeader
POIN OtherHeader 


blankStr:
txt("")
RewardsHeader: 
txt("Rewards") 
RecruitablesHeader: 
txt("Recruitables") 

EquipmentHeader:
txt("Equipment") 
PromotionsHeader:
txt("Promotions")
LowTurnCountHeader:
txt("Turn Count")
ChapterTimeHeader:
txt("Chapter Time")
MiscHeader:
txt("Misc.")
OtherHeader:
txt("Other") 


ALIGN 4 
AlwaysShowAchievement:
WORD 1 
Img_Achievements:
#incbin "png/Achievements.dmp" 


ALIGN 4 
gAchievementsTable:
achievementData: // these show up once ever atm
FILL (1000 * achievementEntSize)
// other macros write to this 
achievementEnt(EndID, "", "", Category_Terminator) 




// promotions into specific classes 

// achieve A rank support 
// reach level 20 
// reach promoted level 20 

ALIGN 4 
rewardsByPercentage:
FILL(512) 
#define rewardEnt(id1, id, str, str2) "PUSH; ORG rewardsByPercentage + (id1 * 2); SHORT id ; POP; achievementEnt(id, str2, str, Category_Rewards)" 
// str1 and str2 are swapped in this macro 
// rewardEnt(1, Reward_1, "1% completion", "FE7 characters unlocked.") 
rewardEnt(1, Reward_1, "1% completion", "Oboro's Nagnta") 
rewardEnt(2, Reward_2, "2% completion", "Silver Sword") 



ALIGN 4 
recruitmentAchievements: 
FILL (512) 
#define recruitmentEnt(charID, id, str, str2) "PUSH; ORG recruitmentAchievements + (charID * 2); SHORT id ; POP; achievementEnt(id, str, str2, Category_Recruitables)" 
recruitmentEnt(Ross,    RossRecruitID, "The Wounded Trainee", "Recruit Ross") 
recruitmentEnt(Garcia,  GarciaRecruitID, "The Great Garcia", "Recruit Garcia") 
recruitmentEnt(Colm,    ColmRecruitID, "The Thief from Renais", "Recruit Colm") 
recruitmentEnt(Lute,    LuteRecruitID, "The Prodigy", "Recruit Lute") // "The Monk Watcher" 
recruitmentEnt(Joshua,  JoshuaRecruitID, "The Wandering Swordsman", "Recruit Joshua") 
recruitmentEnt(Amelia,  AmeliaRecruitID, "The Orphan of Grado", "Recruit Amelia") 
recruitmentEnt(Innes,   InnesRecruitID, "The Strategician", "Recruit Innes") 
recruitmentEnt(Gerik,   GerikRecruitID, "The Desert Tiger", "Recruit Gerik") 
recruitmentEnt(Tethys,  TethysRecruitID, "The Beloved Dancer", "Recruit Tethys") 
recruitmentEnt(LArachel, LArachelRecruitID, "The Princess of Light", "Recruit L'Arachel") 
recruitmentEnt(Dozla,   DozlaRecruitID, "The Steady Axe", "Recruit Dozla") 
recruitmentEnt(Marisa,  MarisaRecruitID, "The Crimson Flash", "Recruit Marisa") 
recruitmentEnt(Ewan,    EwanRecruitID, "The Pupil", "Recruit Ewan") // some of these don't use CUSA 
recruitmentEnt(Cormag,  CormagRecruitID, "The Aloof Lanceman", "Recruit Cormag" ) 
recruitmentEnt(Rennac,  RennacRecruitID, "The 'Merchant'", "Recruit Rennac" ) 
recruitmentEnt(Duessel, DuesselRecruitID, "The Obsidian", "Recruit Duessel" ) 
recruitmentEnt(Syrene,  SyreneRecruitID, "The Graceful Rider", "Recruit Syrene") 
// recruit all characters? 


#define flagEnt(flagID, id, header, desc) "PUSH; ORG flagAchievements + (flagID * 2); SHORT id ; POP; achievementEnt(id, header, desc, Category_Miscellaneous)" 
#define ccEnt(flagID, id, header, desc) "PUSH; ORG flagAchievements + (flagID * 2); SHORT id ; POP; achievementEnt(id, header, desc, Category_Recruitables)" 
ALIGN 4 
flagAchievements:
FILL (512)
ccEnt(0x67, CaellachID, "The Tiger's Eye", "Unlock Caellach") 
ccEnt(0x68, GlenID, "The Sunstone", "Unlock Glen") 
ccEnt(0x69, OrsonID, "The Devoted Husband", "Unlock Orson") 
ccEnt(0x6A, ValterID, "The Moonstone", "Unlock Valter") 
ccEnt(0x6B, RievID, "The Blood Beryl", "Unlock Riev") 
ccEnt(0x6C, HaydenID, "The King of Frelia", "Unlock Hayden") 
ccEnt(0x6D, FadoID, "The King of Renais", "Unlock Fado") 
ccEnt(0x6E, IsmaireID, "The Queen of Jehanna", "Unlock Ismaire") 
ccEnt(0x6F, SelenaID, "The Fluorspar", "Unlock Selena") 
ccEnt(0x70, LyonID, "The Dark Prince", "Unlock Lyon") 

flagEnt(0x65, LoserID, "Loser", "Get a game over.") 
flagEnt(0x7F, TriangleAttackID, "", "") 
flagEnt(0x80, TriangleAttackID, "", "") 
flagEnt(0x81, TriangleAttackID, "Triangular", "Perform a triangle attack.") 
flagEnt(0x82, FightDemonKingID, "Demonic", "Battle the Demon King.") 


// #define sideEnt(flagID, id, header, desc) "PUSH; ORG flagAchievements + (flagID * 2); SHORT id ; POP; achievementEnt(id, header, desc, Category_Miscellaneous)" 
// ALIGN 4 
// sideAchievements: 
// FILL(512) 
// specific villages, chests, secret shops, etc ? 



#define promoEnt(classID, id, str, str2) "PUSH; ORG promoAchievements + (classID * 2); SHORT id ; POP; achievementEnt(id, str, str2, Category_Promotions)" 
ALIGN 4 
promoAchievements:
FILL (512) 
promoEnt(EphraimMasterLord, EphraimMasterLordID, "Path of Greatness (1)", "Promote Ephraim.")
promoEnt(EirikaMasterLord, EirikaMasterLordID, "Path of Greatness (2)", "Promote Eirika.")
promoEnt(Paladin, PaladinID, "", "")
promoEnt(Paladin_F, PaladinID, "Path of Honor", "Promote into a Paladin.")
promoEnt(GreatKnight, GreatKnightID, "", "")
promoEnt(GreatKnight_F, GreatKnightID, "Path of Loyalty", "Promote into a Great Knight.")
promoEnt(General, GeneralID, "", "")
promoEnt(General_F, GeneralID, "Path of the Shield", "Promote into a General.")
promoEnt(Hero, HeroID, "", "")
promoEnt(Hero_F, HeroID, "Path of Gold", "Promote into a Hero.")
promoEnt(Swordmaster, SwordmasterID, "", "")
promoEnt(Swordmaster_F, SwordmasterID, "Path of the Sword", "Promote into a Swordmaster.")
promoEnt(Rogue, RogueID, "Path of Silence", "Promote into a Rogue.")
promoEnt(Assassin, AssassinID, "", "")
promoEnt(Assassin_F, AssassinID, "Path of Death", "Promote into an Assassin.")
promoEnt(Sniper, SniperID, "", "")
promoEnt(Sniper_F, SniperID, "Path of the Bow", "Promote into a Sniper.")
promoEnt(Ranger, RangerID, "", "")
promoEnt(Ranger_F, RangerID, "Path of the Land", "Promote into a Ranger.")
promoEnt(WyvernLord, WyvernLordID, "", "")
promoEnt(WyvernLord_F, WyvernLordID, "Path of the World", "Promote into a Wyvern Lord.")
promoEnt(WyvernKnight, WyvernKnightID, "", "")
promoEnt(WyvernKnight_F, WyvernKnightID, "Path of the Sky", "Promote into a Wyvern Knight.")
promoEnt(Warrior, WarriorID, "Path of the Axe", "Promote into a Warrior.")
promoEnt(Berserker, BerserkerID, "Path of Might", "Promote into a Berserker.")
promoEnt(Sage, SageID, "", "")
promoEnt(Sage_F, SageID, "Path of Anima", "Promote into a Sage.")
promoEnt(MageKnight, MageKnightID, "", "")
promoEnt(MageKnight_F, MageKnightID, "Path of Arcana", "Promote into a Mage Knight.")
promoEnt(Bishop, BishopID, "", "")
promoEnt(Bishop_F, BishopID, "Path of Light", "Promote into a Bishop.")
promoEnt(Druid, DruidID, "", "")
promoEnt(Druid_F, DruidID, "Path of Darkness", "Promote into a Druid.")
promoEnt(Summoner, SummonerID, "", "")
promoEnt(Summoner_F, SummonerID, "Path of Phantoms", "Promote into a Summoner.")
promoEnt(Journeyman_3, Journeyman_3ID, "Path of the Journeyman", "Promote into a Super Journeyman.")
promoEnt(Pupil_3, Pupil_3ID, "Path of the Pupil", "Promote into a Super Pupil.")
promoEnt(Recruit_3, Recruit_3ID, "Path of the Recruit", "Promote into a Super Recruit.")

promoEnt(FalcoKnight, FalcoKnightID, "Path of the Wind", "Promote into a Falco Knight.")
promoEnt(Entombed, EntombedID, "Path of the Zombie", "Promote into an Entombed.")
promoEnt(Wight, WightID, "", "")
promoEnt(Wight_Bow, WightID, "Path of the Bones", "Promote into a Wight.")
promoEnt(Maelduin, MaelduinID, "Path of the Centaur", "Promote into a Maelduin.")
promoEnt(Gwyllgi, GwyllgiID, "Path of the Dog", "Promote into a Gwyllgi.")
promoEnt(Deathgoyle, DeathgoyleID, "Path of the Gargoyle", "Promote into a Deathgoyle.")
promoEnt(ArchMogall, ArchMogallID, "Path of the Eye", "Promote into an Arch Mogall.")
promoEnt(ElderBael, ElderBaelID, "Path of the Spider", "Promote into an Elder Bael.")




ALIGN 4 
equipAchievements:
FILL (512)
#define equipEnt(itemID, id, str, str2) "PUSH; ORG equipAchievements + (itemID * 2); SHORT id ; POP; achievementEnt(id, str, str2, Category_LegendaryWeapons)" 
equipEnt(Vidofnir, VidofnirID, "The Rooster of Yggdrasil", "Equip Vidofnir")
equipEnt(Audhulma, AudhulmaID, "The Primordial Norse Cow", "Equip Audhulma")
equipEnt(Siegmund, SiegmundID, "The Germanic Hero", "Equip Siegmund")
equipEnt(Garm, GarmID, "The Guardian of Hel's Gate", "Equip Garm")
equipEnt(Nidhogg, NidhoggID, "The Root-Gnawing Dragon", "Equip Nidhogg")
equipEnt(Sieglinde, SieglindeID, "The Germanic Heroine", "Equip Sieglinde")
equipEnt(Gleipnir, GleipnirID, "The Binding Chain of Fenrir", "Equip Gleipnir")
equipEnt(Excalibur, ExcaliburID, "The Sword of King Arthur", "Equip Excalibur")
equipEnt(Ivaldi, IvaldiID, "The Norse Dwarf Blacksmith", "Equip Ivaldi")
equipEnt(Naglfar, NaglfarID, "The Ship of the Dead", "Equip Naglfar")
// These all use the same text / same achievement ID 
equipEnt(WretchedAir, UnobtainableItemID, "", "")  
equipEnt(Forblaze, UnobtainableItemID, "", "")  
equipEnt(Luce, UnobtainableItemID, "", "")  
equipEnt(Aircalibur, UnobtainableItemID, "", "")  
equipEnt(Stone, UnobtainableItemID, "", "")  
equipEnt(CrimsonEye, UnobtainableItemID, "", "")  
equipEnt(EvilEye, UnobtainableItemID, "", "")  
equipEnt(DemonSurge, UnobtainableItemID, "", "")  
equipEnt(Shadowshot, UnobtainableItemID, "How'd you get this?", "Equip Wretched Air, Forblaze, Luce, Aircalibur, Stone, Crimson Eye, Evil Eye, Demon Surge, or Shadowshot.")  // They share an ID, so no need to write the text for all 

ALIGN 4 
turnCountAchievements:
FILL (512)
ALIGN 4 
chapterTimeAchievements:
FILL (512)


#define turnEnt(chapterID, turnCount, id, str, str2) "PUSH; ORG turnCountAchievements + (chapterID * 2); SHORT id turnCount; POP; achievementEnt(id, str, str2, Category_TurnCount)" 
#define speedEnt(chapterID, chapterTime, id, str, str2) "PUSH; ORG chapterTimeAchievements + (chapterID * 2); SHORT id (chapterTime*60); POP; achievementEnt(id, str, str2, Category_ChapterTime)" 


speedEnt(Prologue, 1, PrologueSR , "Out of the Frying Pan", "Complete Ch. 0 within 1 minute.")
turnEnt(Prologue, 1, PrologueLTC, "One Step Ahead", "Complete Ch. 0 within 1 turn.")

speedEnt(Ch1, 2, Ch1SR , "Run for Your Life", "Complete Ch. 1 within 2 minutes.")
turnEnt(Ch1, 3, Ch1LTC, "Quick on the Draw", "Complete Ch. 1 within 3 turns.")

speedEnt(Ch2, 5, Ch2SR , "Escort Mission Expert", "Complete Ch. 2 within 5 minutes.")
turnEnt(Ch2, 5, Ch2LTC, "Guardian Angel", "Complete Ch. 2 within 5 turns.")

speedEnt(Ch3, 5, Ch3SR , "Fast and Fearless", "Complete Ch. 3 within 5 minutes.")
turnEnt(Ch3, 5, Ch3LTC, "Bandit Buster", "Complete Ch. 3 within 5 turns.")

speedEnt(Ch4, 6, Ch4SR , "No Time for Fear", "Complete Ch. 4 within 6 minutes.")
turnEnt(Ch4, 4, Ch4LTC, "Slay and Play", "Complete Ch. 4 within 4 turns.")

speedEnt(Ch5, 9, Ch5SR, "Empire Crusher", "Complete Ch. 5 within 9 minutes.")
turnEnt(Ch5, 4, Ch5LTC, "Hit 'Em Hard", "Complete Ch. 5 within 4 turns.")

speedEnt(Ch5x, 9, Ch5xSR, "Speedy Rescuer", "Complete Ch. 5x within 9 minutes.")
turnEnt(Ch5x, 9, Ch5xLTC, "Treasure Hunter", "Complete Ch. 5x within 9 turns.")

speedEnt(Ch6, 8, Ch6SR, "Warrior's Pace", "Complete Ch. 6 within 8 minutes.")
turnEnt(Ch6, 3, Ch6LTC, "Swift Justice", "Complete Ch. 6 within 3 turns.")

speedEnt(Ch7, 5, Ch7SR, "Streamline", "Complete Ch. 7 within 5 minutes.")
turnEnt(Ch7, 4, Ch7LTC, "Tide Turner", "Complete Ch. 7 within 4 turns.")

speedEnt(Ch8, 13, Ch8SR, "Trap Dodger", "Complete Ch. 8 within 13 minutes.")
turnEnt(Ch8, 6, Ch8LTC, "Quick Reflexes", "Complete Ch. 8 within 6 turns.")

speedEnt(Ch9Eirika, 11, Ch9SREirika, "Swift Strike", "Complete Eirika's Ch. 9 within 11 minutes.")
turnEnt(Ch9Eirika, 10, Ch9LTCEirika, "Blade Dancer", "Complete Eirika's Ch. 9 within 10 turns.")
speedEnt(Ch9Ephraim, 12, Ch9SREphraim, "Fort Express", "Complete Ephraim's Ch. 9 within 12 minutes.")
turnEnt(Ch9Ephraim, 12, Ch9LTCEphraim, "Storm the Fort", "Complete Ephraim's Ch. 9 within 12 turns.")

speedEnt(Ch10Eirika, 12, Ch10SREirika, "Revolt Quashed", "Complete Eirika's Ch. 10 within 12 minutes.")
turnEnt(Ch10Eirika, 9, Ch10LTCEirika, "Turn the Tables", "Complete Eirika's Ch. 10 within 9 turns.")
speedEnt(Ch10Ephraim, 11, Ch10SREphraim, "Betrayal Avoided", "Complete Ephraim's Ch. 10 within 11 minutes.")
turnEnt(Ch10Ephraim, 8, Ch10LTCEphraim, "Quick Justice", "Complete Ephraim's Ch. 10 within 8 turns.")

speedEnt(Ch11Eirika, 12, Ch11SREirika, "Darkness Doesn't Wait", "Complete Eirika's Ch. 11 within 12 minutes.")
turnEnt(Ch11Eirika, 9, Ch11LTCEirika, "Shadow Slayer", "Complete Eirika's Ch. 11 within 9 turns.")
speedEnt(Ch11Ephraim, 16, Ch11SREphraim, "Ghostbuster", "Complete Ephraim's Ch. 11 within 16 minutes.")
turnEnt(Ch11Ephraim, 8, Ch11LTCEphraim, "No Time for Ghosts", "Complete Ephraim's Ch. 11 within 8 turns.")

speedEnt(Ch12Eirika, 15, Ch12SREirika, "Silent but Fast", "Complete Eirika's Ch. 12 within 15 minutes.")
turnEnt(Ch12Eirika, 12, Ch12LTCEirika, "Swift Rescuer", "Complete Eirika's Ch. 12 within 12 turns.")
speedEnt(Ch12Ephraim, 9, Ch12SREphraim, "Smooth Landing", "Complete Ephraim's Ch. 12 within 9 minutes.")
turnEnt(Ch12Ephraim, 5, Ch12LTCEphraim, "Fast Invasion", "Complete Ephraim's Ch. 12 within 5 turns.")

speedEnt(Ch13Eirika, 11, Ch13SREirika, "Canyon Runner", "Complete Eirika's Ch. 13 within 11 minutes.")
turnEnt(Ch13Eirika, 9, Ch13LTCEirika, "Tactical Master", "Complete Eirika's Ch. 13 within 9 turns.")
speedEnt(Ch13Ephraim, 15, Ch13SREphraim, "Oath Keeper", "Complete Ephraim's Ch. 13 within 15 minutes.")
turnEnt(Ch13Ephraim, 6, Ch13LTCEphraim, "Village Savior", "Complete Ephraim's Ch. 13 within 6 turns.")

speedEnt(Ch14Eirika, 13, Ch14SREirika, "Dune Dasher", "Complete Eirika's Ch. 14 within 13 minutes.")
turnEnt(Ch14Eirika, 10, Ch14LTCEirika, "Royal Efficiency", "Complete Eirika's Ch. 14 within 10 turns.")
speedEnt(Ch14Ephraim, 12, Ch14SREphraim, "Family Matters", "Complete Ephraim's Ch. 14 within 12 minutes.")
turnEnt(Ch14Ephraim, 8, Ch14LTCEphraim, "Blood and Honor", "Complete Ephraim's Ch. 14 within 8 turns.")

speedEnt(Ch15Eirika, 15, Ch15SR, "", "")
speedEnt(Ch15Ephraim, 15, Ch15SR, "I don't have all day", "Complete Ch. 15 within 15 minutes.")
turnEnt(Ch15Eirika, 7, Ch15LTC, "", "")
turnEnt(Ch15Ephraim, 7, Ch15LTC, "Treasure? What treasure?", "Complete Ch. 15 within 8 turns.")

speedEnt(Ch16Eirika, 10, Ch16SR, "", "")
speedEnt(Ch16Ephraim, 10, Ch16SR, "Mad Dash", "Complete Ch. 16 within 10 minutes.")
turnEnt(Ch16Eirika, 4, Ch16LTC, "", "")
turnEnt(Ch16Ephraim, 4, Ch16LTC, "Lunatic Speed", "Complete Ch. 16 within 6 turns.")

speedEnt(Ch17Eirika, 4, Ch17SR, "", "")
speedEnt(Ch17Ephraim, 4, Ch17SR, "Fast Current", "Complete Ch. 17 within 4 minutes.")
turnEnt(Ch17Eirika, 3, Ch17LTC, "", "")
turnEnt(Ch17Ephraim, 3, Ch17LTC, "Regret Nothing", "Complete Ch. 17 within 3 turns.")

speedEnt(Ch18Eirika, 15, Ch18SR, "", "")
speedEnt(Ch18Ephraim, 15, Ch18SR, "Double Time", "Complete Ch. 18 within 15 minutes.")
turnEnt(Ch18Eirika, 12, Ch18LTC, "", "")
turnEnt(Ch18Ephraim, 12, Ch18LTC, "One-Turned", "Complete Ch. 18 within 12 turns.")

speedEnt(Ch19Eirika, 4, Ch19SR, "", "")
speedEnt(Ch19Ephraim, 4, Ch19SR, "Hope in a Hurry", "Complete Ch. 19 within 4 minutes.")
turnEnt(Ch19Eirika, 5, Ch19LTC, "", "")
turnEnt(Ch19Ephraim, 5, Ch19LTC, "Last Turn Standing", "Complete Ch. 19 within 5 turns.")

speedEnt(Ch20Eirika, 4, Ch20SR, "", "")
speedEnt(Ch20Ephraim, 4, Ch20SR, "Through the Woods", "Complete Ch. 20 within 12 minutes.")
turnEnt(Ch20Eirika, 5, Ch20LTC, "", "")
turnEnt(Ch20Ephraim, 5, Ch20LTC, "Swift as the Wind", "Complete Ch. 20 within 8 turns.")

speedEnt(FinalCh1Eirika, 5, Ch21SR, "", "")
speedEnt(FinalCh1Ephraim, 5, Ch21SR, "Stone Cold Speed", "Complete Ch. 21 within 5 minutes.")
turnEnt(FinalCh1Eirika, 7, Ch21LTC, "", "")
turnEnt(FinalCh1Ephraim, 7, Ch21LTC, "Flawless Finish", "Complete Ch. 21 within 7 turns.")

speedEnt(FinalCh2Erika, 1, Ch22SR, "", "") // ea has a typo 
speedEnt(FinalCh2Ephraim, 1, Ch22SR, "Demon King? Defeated!", "Defeat the Demon King within 1 minute.")
turnEnt(FinalCh2Erika, 1, Ch22LTC, "", "")
turnEnt(FinalCh2Ephraim, 1, Ch22LTC, "No Time to Spare", "Defeat the Demon King within 1 turn.")





ALIGN 4 
gNotificationsData: // these show up when a flag is turned on 
// NotificationEntryTextID(0x505, 1) // textID "Sword", flagID 
// NotificationEntryTextID(0x3D, 1) // textID, flagID 
// NotificationEntry(text0, 0) // text label, flagID 
// NotificationEntry(text1, 0xA, TEXT_COLOR_SYSTEM_WHITE, TEXT_COLOR_SYSTEM_GREEN) 
// NotificationEntry(text2, 0x65) 

// NotificationEntry(text3, 0) 
// NotificationEntry(text4, 0) 
WORD 0 0 // Terminator 

// don't exceed 6 lines 
// text0: 
txt("Achievement Completed:\\
Scuffed."); BYTE 0 

text1: 
txt("New Game+ Unlock:\\
Silver Sword."); BYTE 0 



text0:
// txt("11\22\33\4444")
txt("Because I could not stop for Death\He kindly stopped for me\The Carriage held but just Ourselves\And Immortality."); BYTE 0 

text3: 
txt("We slowly drove - He knew no haste\\
And I had put away\\
My labor and my leisure too,\\
For His Civility -")

text1: 
txt("Critical security updates are required."); BYTE 0 
text2: 
txt("Achievement unlocked: Loser."); BYTE 0 
// text0: 
txt("A new update for CandyCrushSaga is available."); BYTE 0 
text4: 
txt("NG+ feature unlocked: Silver Sword."); BYTE 0 
text5: 
txt("Critical security updates are required."); BYTE 0 





#ifndef callHackNew
	#define callHackNew(offset)         "BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
	#define callHackNew_r2(offset) 		"BYTE $01 $4A $96 $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
#endif 

PUSH 


#ifdef _FE6_ 
// ORG $ 
#endif 
#ifdef _FE7_ 
// ORG $ 
#endif 
#ifdef _FE8_ 
ORG 0x83be0 
#endif 
callHackNew(HookSetLocalFlag_NotificationWindow) 


#ifdef _FE6_ 
// ORG $ 
#endif 
#ifdef _FE7_ 
// ORG $ 
#endif 
#ifdef _FE8_ 
ORG $226F4 
// POIN ProcScr_E_Achievements_Map // take over guide menu for now 

ORG $2f672 
SHORT $4688 $4699 $46c0 // mov r8, r1 and mov r9, r3 
callHackNew(Hook_ExecUnitPromotion) 


ORG $a4eb0
callHackNew(Hook_InitSave) 

ORG $83288 
callHackNew(Hook_CallEndEvent) 

ORG $84420 
callHackNew(Hook_RunWaitEvents) 
SHORT $46c0 

ORG $8d14c 
POIN New_gProcScr_SideWindowMaker 

ORG 0x83CAC
#endif 
callHackNew(HookSetGlobalFlag_NotificationWindow) 
POP 




#ifdef _FE8_ 
#include "Data/FE8.lyn.event" 
#include "Data/FE8_AsmHooks.lyn.event" 
#endif 
#ifdef _FE7_ 
#include "Data/FE7.lyn.event" 
#endif 
#ifdef _FE6_ 
#include "Data/FE6.lyn.event" 
#endif 


ALIGN 4 
gGfx_NotificationTextBox1:
#incbin "png/Helpbox_1.dmp"
ALIGN 4 
gGfx_NotificationTextBox2:
#incbin "png/Helpbox_2.dmp"
ALIGN 4 
gGfx_NotificationTextBox3:
#incbin "png/Helpbox_3.dmp"
ALIGN 4 
gGfx_NotificationTextBox4:
#incbin "png/Helpbox_4.dmp"
ALIGN 4 
gGfx_NotificationTextBox5:
#incbin "png/Helpbox_5.dmp"



